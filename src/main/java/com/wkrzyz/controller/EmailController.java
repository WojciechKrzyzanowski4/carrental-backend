package com.wkrzyz.controller;

import com.wkrzyz.dto.ContactDTO;
import com.wkrzyz.dto.FeedbackDTO;
import com.wkrzyz.exception.NotFoundException;
import com.wkrzyz.service.EmailService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

/**
 * This class in for basic implementation.
 * Only the service class should be used in the further development.
 * In the application properties the password and username should be replaced
 * by the individual email as well as an app password that was generated by google.
 */
@RestController
@CrossOrigin
@RequiredArgsConstructor
@RequestMapping("/send")
public class EmailController {

    private final EmailService emailService;
    /**
     * This works I fixed it, this shit hurt btw do not try to use yahoo for this, it made me heavily consider testing if I could fly
     * */
    @GetMapping("/test-discount")
    public ResponseEntity<Void> sendEmails(){
        emailService.sendSimpleMessage("spider.wojciech@gmail.com", "Test email", "Hello, World!");
        return ResponseEntity.status(HttpStatus.OK).build();
    }

    @GetMapping
    public ResponseEntity<Void> sendEmailsToAll(){
        emailService.sendSimpleMessage("spider.wojciech@gmail.com", "Test email", "Hello, World!");
        return ResponseEntity.status(HttpStatus.OK).build();
    }

    @PostMapping("/email")
    public ResponseEntity<Void> respondToEmail( @RequestBody ContactDTO contactDTO ){
        try{
            emailService.sendContact(contactDTO);
        }catch (NotFoundException e){
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
        return new ResponseEntity<>(HttpStatus.OK);
    }

    @PostMapping("/feedback")
    public ResponseEntity<Void> respondToFeedback( @RequestBody FeedbackDTO feedbackDTO ){
        try{
            emailService.sendFeedback(feedbackDTO);
        }catch (NotFoundException e){
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }

        return new ResponseEntity<>(HttpStatus.OK);
    }


}
